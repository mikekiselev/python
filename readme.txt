Python. Основы языка и разработки веб-приложений
Урок 1. Введение
Установка и запуск интерпретатора Python, Что такое Python? Краткая история языка, Кто в настоящее время использует Python?, Cильные стороны Python, Философия Python, Версии Python 2.x и 3.x, Вычисления на Python: использование интерпретатора в качестве калькулятора, Знакомство и типами данных: числа, строки, списки, логический тип, None, Определение функций, Управление потоком выполнения: оператор if, Циклы for и while, Функции range и enumerate, Операторы break и continue, Оператор pass, Методы работы со строками, Методы работы со списками, Оператор del
Урок 2. Структуры данных
Дробные числа (Decimal и Fraction), Дробные числа (Decimal и Fraction), Словари (dict), Множества (set и frozenset), Работа с файлами - чтение, запись, Генераторы, Встроенные функции max, min, sum
Урок 3. Функциональное программирование
Ввод данных пользователем: input(), Встроенные функции: map, zip, filter, reduce, Встроенные функции: any, all, Лямбда-функции (lambda), Функции-генераторы (yield вместо return)
Урок 4. Системное программирование
Регулярные выражения (модуль re), Взаимодействие с операционной системой, Модули os, os.path, shutil, sys, Протоколы интернет (модуль urllib)
Урок 5. Модули, пакеты, классы и объекты
Модули, Импорт модуля (import и from), Пространство имен модуля, Атрибуты модулей, Пакеты, Создание пакета, Классы и объекты, Синтаксис определения класса, Объекты классы, Объекты-экземпляры классов, Наследование, Метод-конструктор __init__, Множественное наследование, Приватные переменные класса, Консервация объектов. Модуль shelve
Урок 6. Декораторы, Исключения, Итераторы
Декораторы, Специальные декораторы для классов, @property, @staticmethod, @classmethod, @abstractmethod, Ошибки и исключения, Обработка исключений, Инструкция try/except, Инструкция try/else, Возбуждение исключений, Создание собственных исключений, Инструкция try/finally, Итераторы
Урок 7. Библиотеки
Работа с итераторами - itertools, Работа с коллекциями - collections, Работа с CSV, Работа с SQLite, Работа с JSON, Работа с XML
Урок 8. Интерфейсы
Интерфейсы (перегрузка операторов).Интерфейс итерации (iter(), next()). Метод как атрибут (@property). Статические методы

Django. Создание веб сайтов на Python
Урок 1. Знакомство с фрэймворком
Зачем нужен Django. Сильные стороны фрэймворка. Установка и настройка. Общие сведения о структуре проекта. Знакомство с urlpatterns. Первая страничка и её отображение.
Урок 2. Шаблон + Контекст = html
Паттерн MVC (или MVT - model view template). Понятие "свободное связывание". Работа со статикой. Шаблонизатор Django: шаблонные фильтры, наследование шаблонов. Демо-сайт "About me".
Урок 3. Модели + ORM = данные
Краткая теория баз данных. Введение в Django-ORM. Подключение и создание базы данных. Миграции. Работа с данными через Модель. Дополняем демо-сайт "About me".
Урок 4. Вглубь запросов
Выполнение запросов. Объект QuerySet и его методы. Связывание моделей. Продолжаем дополнять сайт "About me".
Урок 5. Login + Password = Авторизация
Выбираем проект для дальнейшей реализации. Создаем общую структуру проекта. Добавляем регистрацию и авторизацию пользователей.
Урок 6. Ajax + JS + Django = Удобная админка
Продолжаем работу над проектом. Делаем админку для работы с зарегистрированными пользователями. Реализуем работу с пользователями без Ajax и через Ajax. Несколько слов о Javascript.
Урок 7. Работаем над контентом (Django-form)
Работаем над заполнением сайта реальной информацией из базы данных. Реализуем подробную информацию по каждому объекту. Добавляем в админку функционал для добавления, редактирования, удаления объектов из базы данных. Загрузка файлов на сервер.
Урок 8. Несколько удобных инструментов и подведение итогов
Инструменты: агрегация данных, декораторы, собственные шаблонные фильтры. Что еще умеет Django. Подведение итогов.